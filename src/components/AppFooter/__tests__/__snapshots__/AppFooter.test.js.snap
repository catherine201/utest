// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(Component) AppHeader -- snapshot capture snapshot of AppHeader 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AppFooter />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Icon
          type="cloud"
        />,
        "Make by  ",
        <span>
          <Tag
            closable={false}
            color="blue"
            prefixCls="ant-tag"
          >
            EUEN
          </Tag>
        </span>,
      ],
      "className": "text-center",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "type": "cloud",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "Make by  ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Tag
            closable={false}
            color="blue"
            prefixCls="ant-tag"
          >
            EUEN
          </Tag>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "EUEN",
            "closable": false,
            "color": "blue",
            "prefixCls": "ant-tag",
          },
          "ref": null,
          "rendered": "EUEN",
          "type": [Function],
        },
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Icon
            type="cloud"
          />,
          "Make by  ",
          <span>
            <Tag
              closable={false}
              color="blue"
              prefixCls="ant-tag"
            >
              EUEN
            </Tag>
          </span>,
        ],
        "className": "text-center",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "type": "cloud",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "Make by  ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Tag
              closable={false}
              color="blue"
              prefixCls="ant-tag"
            >
              EUEN
            </Tag>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "EUEN",
              "closable": false,
              "color": "blue",
              "prefixCls": "ant-tag",
            },
            "ref": null,
            "rendered": "EUEN",
            "type": [Function],
          },
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
