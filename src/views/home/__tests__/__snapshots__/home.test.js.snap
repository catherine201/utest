// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(Component) AppSider -- snapshot capture snapshot of AppSider 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div>
          <img
            alt="logo"
            src="logo.png"
          />
        </div>,
        <div
          style={
            Object {
              "margin": "10px 0",
            }
          }
        >
          <h1>
            Euen 后台管理系统
          </h1>
        </div>,
        <div>
          <Button
            block={false}
            className="btn-block btn-lg"
            ghost={false}
            loading={false}
            onClick={[Function]}
            prefixCls="ant-btn"
          >
            进入系统...
          </Button>
        </div>,
      ],
      "className": "middle-box",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <img
            alt="logo"
            src="logo.png"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "logo",
            "src": "logo.png",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h1>
            Euen 后台管理系统
          </h1>,
          "style": Object {
            "margin": "10px 0",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Euen 后台管理系统",
          },
          "ref": null,
          "rendered": "Euen 后台管理系统",
          "type": "h1",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Button
            block={false}
            className="btn-block btn-lg"
            ghost={false}
            loading={false}
            onClick={[Function]}
            prefixCls="ant-btn"
          >
            进入系统...
          </Button>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "block": false,
            "children": "进入系统...",
            "className": "btn-block btn-lg",
            "ghost": false,
            "loading": false,
            "onClick": [Function],
            "prefixCls": "ant-btn",
          },
          "ref": null,
          "rendered": "进入系统...",
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            <img
              alt="logo"
              src="logo.png"
            />
          </div>,
          <div
            style={
              Object {
                "margin": "10px 0",
              }
            }
          >
            <h1>
              Euen 后台管理系统
            </h1>
          </div>,
          <div>
            <Button
              block={false}
              className="btn-block btn-lg"
              ghost={false}
              loading={false}
              onClick={[Function]}
              prefixCls="ant-btn"
            >
              进入系统...
            </Button>
          </div>,
        ],
        "className": "middle-box",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <img
              alt="logo"
              src="logo.png"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "logo",
              "src": "logo.png",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h1>
              Euen 后台管理系统
            </h1>,
            "style": Object {
              "margin": "10px 0",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Euen 后台管理系统",
            },
            "ref": null,
            "rendered": "Euen 后台管理系统",
            "type": "h1",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Button
              block={false}
              className="btn-block btn-lg"
              ghost={false}
              loading={false}
              onClick={[Function]}
              prefixCls="ant-btn"
            >
              进入系统...
            </Button>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "block": false,
              "children": "进入系统...",
              "className": "btn-block btn-lg",
              "ghost": false,
              "loading": false,
              "onClick": [Function],
              "prefixCls": "ant-btn",
            },
            "ref": null,
            "rendered": "进入系统...",
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`(Component) home -- snapshot capture snapshot of home 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <home />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": "home",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": "home",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
